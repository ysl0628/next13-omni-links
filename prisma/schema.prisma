// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  username       String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  image          String?
  customImage    String?
  title          String?
  description    String?
  themeColor     String?

  accounts Account[]
  links    Link[]
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  type               String
  userId             String  @db.ObjectId // This creates a foreign key in the Account table pointing to User
  provider           String
  providerAccountId  String
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String? @db.String
  oauth_token        String? @db.String
  oauth_token_secret String? @db.String

  // 這裡的 onDelete: Cascade 會將 User 刪除時，一併刪除 Account
  // relation 的 fields 是指 Account 的 userId，references 是指 User 的 id
  // 代表 Account 的 userId 會參照 User 的 id
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Link {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String
  title     String
  url       String
  order     Int
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
